{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\game\\\\game\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: [\" \", props.value, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 14\n  }, this);\n}\n\n_c = Square;\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [\" \", this.renderSquare(0), \" \", this.renderSquare(1), \" \", this.renderSquare(2), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [\" \", this.renderSquare(3), \" \", this.renderSquare(4), \" \", this.renderSquare(5), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [\" \", this.renderSquare(6), \" \", this.renderSquare(7), \" \", this.renderSquare(8), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = \"X\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n\n    for (i = 0; i < 9; i++) {\n      if (squares[i] === null) {\n        let a;\n\n        while (true) {\n          a = getRandomInt(9);\n          if (squares[a] === null) break;\n        }\n\n        squares[a] = \"O\";\n        break;\n      }\n    }\n\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: [\" \", desc, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), \" \"]\n      }, move, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 22\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next: \" + (this.state.xIsNext ? \"Player (X)\" : \"Bot (O)\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", status, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", moves, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 149,\n  columnNumber: 18\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/game/game/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","getRandomInt","max","Math","floor","random","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","a","jumpTo","step","winner","moves","map","move","desc","status","document","getElementById","lines","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return ( <\r\n        button className = \"square\"\r\n        onClick = { props.onClick } > { props.value } <\r\n        /button>\r\n    );\r\n}\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return ( <\r\n            Square value = { this.props.squares[i] }\r\n            onClick = {\r\n                () => this.props.onClick(i) }\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n            div >\r\n            <\r\n            div className = \"board-row\" > { this.renderSquare(0) } { this.renderSquare(1) } { this.renderSquare(2) } <\r\n            /div> <\r\n            div className = \"board-row\" > { this.renderSquare(3) } { this.renderSquare(4) } { this.renderSquare(5) } <\r\n            /div> <\r\n            div className = \"board-row\" > { this.renderSquare(6) } { this.renderSquare(7) } { this.renderSquare(8) } <\r\n            /div> <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = \"X\";\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n\r\n\r\n\r\n        for (i = 0; i < 9; i++) {\r\n            if (squares[i] === null) {\r\n                let a\r\n                while (true) {\r\n                    a = getRandomInt(9)\r\n                    if (squares[a] === null)\r\n                        break\r\n                }\r\n                squares[a] = \"O\";\r\n                break\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return ( <\r\n                li key = { move } >\r\n                <\r\n                button onClick = {\r\n                    () => this.jumpTo(move) } > { desc } < /button> <\r\n                /li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next: \" + (this.state.xIsNext ? \"Player (X)\" : \"Bot (O)\");\r\n        }\r\n\r\n        return ( <\r\n            div className = \"game\" >\r\n            <\r\n            div className = \"game-board\" >\r\n            <\r\n            Board squares = { current.squares }\r\n            onClick = { i => this.handleClick(i) }\r\n            /> <\r\n            /div> <\r\n            div className = \"game-info\" >\r\n            <\r\n            div > { status } < /div> <\r\n            ol > { moves } < /ol> <\r\n            /div> <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render( < Game / > , document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}